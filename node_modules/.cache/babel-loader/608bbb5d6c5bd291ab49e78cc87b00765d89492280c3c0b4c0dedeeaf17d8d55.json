{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\appointment-planner-starting-v18\\\\src\\\\components\\\\contactPicker\\\\ContactPicker.js\";\nimport React from \"react\";\n\n// Stateless component that renders a drop-down list of all contact names\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactPicker = _ref => {\n  let {\n    contact,\n    onChange,\n    value,\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: onChange,\n      value: value,\n      name: name,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"No Contact Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), contact.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: e.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ContactPicker;\nvar _c;\n$RefreshReg$(_c, \"ContactPicker\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactPicker","_ref","contact","onChange","value","name","children","fileName","_jsxFileName","lineNumber","columnNumber","map","e","_c","$RefreshReg$"],"sources":["C:/projects/appointment-planner-starting-v18/src/components/contactPicker/ContactPicker.js"],"sourcesContent":["import React from \"react\";\r\n\r\n// Stateless component that renders a drop-down list of all contact names\r\nexport const ContactPicker = ({ contact, onChange, value, name }) => {\r\n  return (\r\n    <>\r\n      <select onChange={onChange} value={value} name={name}>\r\n        <option value=\"\">\r\n          No Contact Selected\r\n        </option>\r\n        {\r\n          contact.map((e) => {\r\n            return (\r\n              <option>\r\n                {e.name}\r\n              </option>\r\n            );\r\n          })\r\n        }\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,MAAMC,aAAa,GAAGC,IAAA,IAAwC;EAAA,IAAvC;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAAJ,IAAA;EAC9D,oBACEJ,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAQM,QAAQ,EAAEA,QAAS;MAACC,KAAK,EAAEA,KAAM;MAACC,IAAI,EAAEA,IAAK;MAAAC,QAAA,gBACnDT,OAAA;QAAQO,KAAK,EAAC,EAAE;QAAAE,QAAA,EAAC;MAEjB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EAEPR,OAAO,CAACS,GAAG,CAAEC,CAAC,IAAK;QACjB,oBACEf,OAAA;UAAAS,QAAA,EACGM,CAAC,CAACP;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACA;MAEb,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEG,iBACR;AAEP,CAAC;AAACG,EAAA,GAnBWb,aAAa;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}